using System;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace demo
{
    class Program
    {
        static void Main(string[] args)
        {
            //string oldpath = @"D:\test\ExcelToXml\demo\data\航空公司二字码.xlsx";
            //string newpath = @"D:\test\ExcelToXml\demo\xml\companyinfo.xml";
            Console.WriteLine(new string('=', 20));
            Console.WriteLine("该程序的主要功能是把Excel文件转换成xml文件");
            //Console.WriteLine("表头为节点名称，新文件名称为父级节点名称，根节点为root");
            Console.WriteLine("注意在使用程序时至少需保证电脑上存在office开发环境，或已安装office。");
            Console.WriteLine("否则请下载2007 Office system 驱动程序：数据连接组件安装 http://download.microsoft.com/download/7/0/3/703ffbcb-dc0c-4e19-b0da-1463960fdcdb/AccessDatabaseEngine.exe");
            Console.WriteLine(new string('=', 20));
            Console.WriteLine("请输入xls文件磁盘路径(绝对路径)");
            string oldpath = Console.ReadLine();
            Console.WriteLine("请输入xml文件存储路径(绝对路径)");
            string newpath = Console.ReadLine();
            DataTable dt = GetTableFromExcel("Sheet1", oldpath);
            string name = newpath.Substring(newpath.LastIndexOf('\\') + 1, newpath.LastIndexOf('.') - newpath.LastIndexOf('\\')-1);
            //文件夹不存在创建 省略
            //dt.WriteXml();
            try
            {
                XDocument xdoc = CreateXmlBase();
                XElement root = new XElement("root");
                foreach (DataRow row in dt.Rows)
                {
                    XElement info = new XElement(name);
                    foreach (DataColumn item in dt.Columns)
                    {
                        info.SetElementValue(item.ColumnName, row[item.ColumnName]);
                    }
                    root.Add(info);
                }
                xdoc.Add(root);
                xdoc.Save(newpath);
                Console.WriteLine("转换成功");
            }
            catch (Exception ex)
            {

                Console.WriteLine(ex.Message);
            }
        }
        /// <summary>
        /// 获取Excel内容。
        /// </summary>
        /// <param name="sheetName">工作表名称，例：sheet1</param>
        /// <param name="filePath">Excel路径</param>
        /// <returns></returns>
        private static DataTable GetTableFromExcel(string sheetName, string filePath)
        {
            const string connStrTemplate = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source={0};Extended Properties=\"Excel 12.0;HDR=Yes;\"";
            DataTable dt = null;
            if (!System.IO.File.Exists(filePath))
            {
                // don't find file
                return null;
            }
            OleDbConnection conn = new OleDbConnection(string.Format(connStrTemplate, filePath));
            try
            {
                conn.Open();
                if (sheetName == null || sheetName.Trim().Length == 0)
                {
                    DataTable schemaTable = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                    sheetName = schemaTable.Rows[0]["TABLE_NAME"].ToString().Trim();
                }
                else
                {
                    sheetName += "$";
                }

                string strSQL = "Select * From [" + sheetName + "]";
                OleDbDataAdapter da = new OleDbDataAdapter(strSQL, conn);
                DataSet ds = new DataSet();
                da.Fill(ds);
                dt = ds.Tables[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                conn.Close();
            }

            return dt;
        }

        /// <summary>
        /// xml初始化
        /// </summary>
        /// <returns></returns>
        public static XDocument CreateXmlBase()
        {
            return new XDocument(new XDeclaration("1.0", "utf-8", "yes"), new XComment("This document is generated by the program.Please do not modify it manually."));
        }
    }
}
